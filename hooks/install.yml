---
- name: create Atomic Host image
  os_image:
    name: atomic_host_image
    container_format: bare
    disk_format: qcow2
    state: present
    filename: "{{ atomic_image_path }}"

- name: stat id_rsa file
  stat:
    path: "{{ SSH_PRIVATE_KEY_FILE }}"
  register: atomic_id_rsa

- name: generate SSH keys
  shell: 'ssh-keygen -b 2048 -t rsa -f {{ SSH_PRIVATE_KEY_FILE }} -q -N ""'
  when: atomic_id_rsa.stat.exists == False

- name: delete Atomic ssh key in OSP
  os_keypair:
    auth:
      auth_url: "{{ lookup('env', 'OS_AUTH_URL') }}"
      username: "{{ lookup('env', 'OS_USERNAME') }}"
      password: "{{ lookup('env', 'OS_PASSWORD') }}"
      user_domain_name:  "{{ lookup('env', 'OS_USER_DOMAIN_NAME') }}"
      project_domain_name:  "{{ lookup('env', 'OS_PROJECT_DOMAIN_NAME') }}"
      project_name: "{{ lookup('env', 'OS_PROJECT_NAME') }}"
    state: absent
    name: atomic

- name: create key in OSP for atomic
  os_keypair:
    auth:
      auth_url: "{{ lookup('env', 'OS_AUTH_URL') }}"
      username: "{{ lookup('env', 'OS_USERNAME') }}"
      password: "{{ lookup('env', 'OS_PASSWORD') }}"
      user_domain_name:  "{{ lookup('env', 'OS_USER_DOMAIN_NAME') }}"
      project_domain_name:  "{{ lookup('env', 'OS_PROJECT_DOMAIN_NAME') }}"
      project_name: "{{ lookup('env', 'OS_PROJECT_NAME') }}"
    state: present
    name: atomic
    public_key_file: "{{ SSH_PUBLIC_KEY_FILE }}"

- name: create Atomic Host instance
  os_server:
    state: present
    name: atomic_host_instance
    image: atomic_host_image
    key_name: atomic
    timeout: 200
    flavor: m1.small
    floating_ips:
      - "{{ SSH_HOST }}"
    volume_size: 30
    security_groups: ['ssh']
    network: local
